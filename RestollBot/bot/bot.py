import pandas as pd
import requests
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from bs4 import BeautifulSoup as BS

from config import bot_token

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
bot = Bot(token=bot_token)
dp = Dispatcher(bot)

# –¢–∏–ø—ã —Ç–æ–≤–∞—Ä–æ–≤
menu = {
    1: 'https://restoll.ru/catalog/vanny-moechnye-i-rukomoyniki/',
    2: 'https://restoll.ru/catalog/vozdukhoochistiteli/',
    3: 'https://restoll.ru/catalog/vytyazhnye-zonty/',
    4: 'https://restoll.ru/catalog/modulnye-stellazhnye-sistemy/',
    5: 'https://restoll.ru/catalog/podstavki-i-podtovarniki/',
    6: 'https://restoll.ru/catalog/polki/',
    7: 'https://restoll.ru/catalog/prilavki-i-moduli/',
    8: 'https://restoll.ru/catalog/stellazhi_kukhonnye/',
    9: 'https://restoll.ru/catalog/stoly-dlya-gryaznoy-i-chistoy-posudy/',
    10: 'https://restoll.ru/catalog/stoly-i-kolody-razrubochnye/',
    11: 'https://restoll.ru/catalog/stoly-kukhonnye/',
    12: 'https://restoll.ru/catalog/telezhki-proizvodstvennye/',
    13: 'https://restoll.ru/catalog/telezhki-servirovochnye/',
    14: 'https://restoll.ru/catalog/telezhki-shpilki/',
    15: 'https://restoll.ru/catalog/shkafy_dlya_odezhdy/',
    16: 'https://restoll.ru/catalog/shkafy-kukhonnye/'
}


# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    global hello, pic

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        await pic2.delete()
    except:
        pass
    try:
        await pic.delete()
    except:
        pass
    try:
        await hello.delete()
    except:
        pass
    try:
        await bot.delete_message(message.from_user.id, message_id=message.message_id)
    except:
        pass
    try:
        await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id)
    except:
        pass
    try:
        await msg.delete()
    except:
        pass
    try:
        await b.delete()
    except:
        pass
    try:
        await b1.delete()
    except:
        pass

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    des = open('menu.jpg')
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    name = message.from_user.first_name
    img = open('preview.jpg', 'rb')
    pic = await bot.send_photo(message.chat.id, img)
    hello = await bot.send_message(message.chat.id,
                           text=f'üëãüëãüëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {name}üëãüëãüëã! –≠—Ç–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã '
                                f'–ø–æ–º–æ—á—å —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Äüì¶ –Ω–∞ —Å–∞–π—Ç–µ restoll.ru üåê!')

    # –ö–Ω–æ–ø–∫–∏
    # keyboard = types.InlineKeyboardMarkup()
    # keyboard.add(types.InlineKeyboardButton(text="–í–∞–Ω–Ω—ã –º–æ–µ—á–Ω—ã–µ", callback_data="1"))
    # keyboard.add(types.InlineKeyboardButton(text="–í–æ–∑–¥—É—Ö–æ–æ—á–∏—Å—Ç–∏—Ç–µ–ª–∏", callback_data="2"))
    # keyboard.add(types.InlineKeyboardButton(text="–í—ã—Ç—è–∂–Ω—ã–µ –∑–æ–Ω—Ç—ã", callback_data="3"))
    # keyboard.add(types.InlineKeyboardButton(text="–ú–æ–¥—É–ª—å–Ω—ã–µ —Å—Ç–µ–ª–∞–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", callback_data="4"))
    # keyboard.add(types.InlineKeyboardButton(text="–ü–æ–¥—Å—Ç–∞–≤–∫–∏ –∏ –ø–æ–¥—Ç–æ–≤–∞—Ä–Ω–∏–∫–∏", callback_data="5"))
    # keyboard.add(types.InlineKeyboardButton(text="–ü–æ–ª–∫–∏", callback_data="6"))
    # keyboard.add(types.InlineKeyboardButton(text="–ü—Ä–∏–ª–∞–≤–∫–∏ –∏ –º–æ–¥—É–ª–∏", callback_data="7"))
    # keyboard.add(types.InlineKeyboardButton(text="–°—Ç–µ–ª–∞–∂–∏ –∫—É—Ö–æ–Ω–Ω—ã–µ", callback_data="8"))
    # keyboard.add(types.InlineKeyboardButton(text="–°—Ç–æ–ª—ã –¥–ª—è –≥—Ä—è–∑–Ω–æ–π –∏ —á–∏—Å—Ç–æ–π –ø–æ—Å—É–¥—ã", callback_data="9"))
    # keyboard.add(types.InlineKeyboardButton(text="–°—Ç–æ–ª—ã –∏ –∫–æ–ª–æ–¥—ã —Ä–∞–∑—Ä—É–±–æ—á–Ω—ã–µ", callback_data="10"))
    # keyboard.add(types.InlineKeyboardButton(text="–°—Ç–æ–ª—ã –∫—É—Ö–æ–Ω–Ω—ã–µ", callback_data="11"))
    # keyboard.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–∂–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ", callback_data="12"))
    # keyboard.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–∂–∫–∏ —Å–µ—Ä–≤–∏—Ä–æ–≤–æ—á–Ω—ã–µ", callback_data="13"))
    # keyboard.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–∂–∫–∏-—à–ø–∏–ª—å–∫–∏", callback_data="14"))
    # keyboard.add(types.InlineKeyboardButton(text="–®–∫–∞—Ñ—ã –¥–ª—è –æ–¥–µ–∂–¥—ã", callback_data="15"))
    # keyboard.add(types.InlineKeyboardButton(text="–®–∫–∞—Ñ—ã –∫—É—Ö–æ–Ω–Ω—ã–µ", callback_data="16"))
    # await message.answer("–ú–µ–Ω—é", reply_markup=keyboard)
    mm = types.InlineKeyboardMarkup()
    mm.add(types.InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="back"))
    await message.answer(text='Restoll', reply_markup=mm)


# –ú–µ–Ω—é
@dp.callback_query_handler(text='back')
async def send_random_value(call: types.CallbackQuery):
    global b1, pic2

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        await pic2.delete()
    except:
        pass
    try:
        await hello.delete()
    except:
        pass
    try:
        await pic.delete()
    except:
        pass
    try:
        await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    except:
        pass
    try:
        await msg.delete()
    except:
        pass
    try:
        await b.delete()
    except:
        pass
    try:
        await b1.delete()
    except:
        pass
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    img2 = open('menu.jpg', 'rb')
    pic2 = await call.message.answer_photo(img2)

    # –ö–Ω–æ–ø–∫–∏
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–í–∞–Ω–Ω—ã –º–æ–µ—á–Ω—ã–µ", callback_data="1"))
    keyboard.add(types.InlineKeyboardButton(text="–í–æ–∑–¥—É—Ö–æ–æ—á–∏—Å—Ç–∏—Ç–µ–ª–∏", callback_data="2"))
    keyboard.add(types.InlineKeyboardButton(text="–í—ã—Ç—è–∂–Ω—ã–µ –∑–æ–Ω—Ç—ã", callback_data="3"))
    keyboard.add(types.InlineKeyboardButton(text="–ú–æ–¥—É–ª—å–Ω—ã–µ —Å—Ç–µ–ª–∞–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", callback_data="4"))
    keyboard.add(types.InlineKeyboardButton(text="–ü–æ–¥—Å—Ç–∞–≤–∫–∏ –∏ –ø–æ–¥—Ç–æ–≤–∞—Ä–Ω–∏–∫–∏", callback_data="5"))
    keyboard.add(types.InlineKeyboardButton(text="–ü–æ–ª–∫–∏", callback_data="6"))
    keyboard.add(types.InlineKeyboardButton(text="–ü—Ä–∏–ª–∞–≤–∫–∏ –∏ –º–æ–¥—É–ª–∏", callback_data="7"))
    keyboard.add(types.InlineKeyboardButton(text="–°—Ç–µ–ª–∞–∂–∏ –∫—É—Ö–æ–Ω–Ω—ã–µ", callback_data="8"))
    keyboard.add(types.InlineKeyboardButton(text="–°—Ç–æ–ª—ã –¥–ª—è –≥—Ä—è–∑–Ω–æ–π –∏ —á–∏—Å—Ç–æ–π –ø–æ—Å—É–¥—ã", callback_data="9"))
    keyboard.add(types.InlineKeyboardButton(text="–°—Ç–æ–ª—ã –∏ –∫–æ–ª–æ–¥—ã —Ä–∞–∑—Ä—É–±–æ—á–Ω—ã–µ", callback_data="10"))
    keyboard.add(types.InlineKeyboardButton(text="–°—Ç–æ–ª—ã –∫—É—Ö–æ–Ω–Ω—ã–µ", callback_data="11"))
    keyboard.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–∂–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ", callback_data="12"))
    keyboard.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–∂–∫–∏ —Å–µ—Ä–≤–∏—Ä–æ–≤–æ—á–Ω—ã–µ", callback_data="13"))
    keyboard.add(types.InlineKeyboardButton(text="–¢–µ–ª–µ–∂–∫–∏-—à–ø–∏–ª—å–∫–∏", callback_data="14"))
    keyboard.add(types.InlineKeyboardButton(text="–®–∫–∞—Ñ—ã –¥–ª—è –æ–¥–µ–∂–¥—ã", callback_data="15"))
    keyboard.add(types.InlineKeyboardButton(text="–®–∫–∞—Ñ—ã –∫—É—Ö–æ–Ω–Ω—ã–µ", callback_data="16"))
    b1 = await call.message.answer("–ú–µ–Ω—é", reply_markup=keyboard)


@dp.callback_query_handler()
async def send_random_value(call: types.CallbackQuery):
    global b

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    except:
        pass
    try:
        await b1.delete()
    except:
        pass

    global msg
    data1 = int(call.data)

    # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
    r = requests.get(menu.get(data1))
    html = BS(r.content, 'html.parser')
    a = html.find('div', class_="ajax_load cur block")
    name = a.findAll('a', class_="dark_link js-notice-block__title option-font-bold font_sm")
    link = a.findAll("div",
                     class_="col-lg-3 col-md-4 col-sm-6 col-xs-6 col-xxs-12 item item-parent "
                            "catalog-block-view__item js-notice-block item_block")
    price = a.findAll('span', class_="price_value")

    # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    n = []
    for i in name:
        n.append(i.text)

    # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä
    l = []
    for i in link:
        s = ('https://restoll.ru/' + str(
            i.find('a', class_="dark_link js-notice-block__title option-font-bold font_sm").get('href')))
        l.append(s)

    # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
    p = []
    for i in price:
        v = i.text + ' —Ä—É–±–ª–µ–π'
        p.append(v)

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
    n.extend([0, ] * (len(p) - len(n)))
    p.extend([0, ] * (len(n) - len(p)))

    for i, item in enumerate(p):
        if item == 0:
            p[i] = '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    df = pd.DataFrame()
    df['–¢–æ–≤–∞—Ä'] = n
    df['–¶–µ–Ω–∞'] = p
    df['–°—Å—ã–ª–∫–∞'] = l
    df['–î–∞—Ç–∞'] = df['–¢–æ–≤–∞—Ä'] + ' - ' + df['–¶–µ–Ω–∞'] + '\n' + df['–°—Å—ã–ª–∫–∞']

    data = []

    for i in df['–î–∞—Ç–∞']:
        data.append(i)

    # –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    data = ('\n\n'.join(data))
    msg = await call.message.answer(data)

    back = types.InlineKeyboardMarkup()
    back.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    b = await call.message.answer(text='üîô', reply_markup=back)


if __name__ == '__main__':
    executor.start_polling(dp)
